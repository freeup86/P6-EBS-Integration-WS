<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">P6-EBS Integration</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/integration/ebs/projects">EBS Projects</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/integration/p6/projects">P6 Projects</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/integration/status">Sync Status</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row">
      <div class="col-md-12">
        <h1>P6 Projects</h1>
        <p class="lead">Select a Primavera P6 project to sync with Oracle EBS</p>
        
        <div class="card mb-4">
          <div class="card-header bg-primary text-white">
            Project List
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr>
                    <th>Project ID</th>
                    <th>Project Name</th>
                    <th>Status</th>
                    <th>Start Date</th>
                    <th>Finish Date</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="p6ProjectsTable">
                  <% if (projects && projects.length > 0) { %>
                    <% projects.forEach(project => { %>
                      <tr>
                        <td><%= project.id %></td>
                        <td><%= project.name %></td>
                        <td>
                          <span class="badge <%= project.status === 'Active' ? 'bg-success' : (project.status === 'Planned' ? 'bg-warning text-dark' : 'bg-secondary') %>">
                            <%= project.status %>
                          </span>
                        </td>
                        <td><%= new Date(project.startDate).toLocaleDateString() %></td>
                        <td><%= new Date(project.finishDate).toLocaleDateString() %></td>
                        <td>
                          <button class="btn btn-primary btn-sm sync-wbs-btn" data-project-id="<%= project.id %>" data-project-name="<%= project.name %>">
                            Sync WBS to EBS
                          </button>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="6" class="text-center">No projects found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card-header bg-success text-white">
            Resource Assignments
          </div>
          <div class="card-body">
            <p>Sync all resource assignments from P6 to Oracle EBS.</p>
            <p>This will update resource assignments across all projects based on the latest data in P6.</p>
            <button class="btn btn-success" id="syncResourcesBtn">Sync Resource Assignments</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Sync WBS Modal -->
  <div class="modal fade" id="syncWBSModal" tabindex="-1" aria-labelledby="syncWBSModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="syncWBSModalLabel">Sync WBS to EBS</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Project: <strong id="selectedProjectName"></strong></p>
          <p>This will update EBS Tasks with data from P6 WBS.</p>
          <p>This operation will:</p>
          <ul>
            <li>Calculate earliest start date from activities in each WBS</li>
            <li>Calculate latest finish date from activities in each WBS</li>
            <li>Calculate average percent complete from activities in each WBS</li>
            <li>Update corresponding EBS task with these calculated metrics</li>
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="startSyncWBSBtn">Start Sync</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Sync Progress Modal -->
  <div class="modal fade" id="syncProgressModal" tabindex="-1" aria-labelledby="syncProgressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="syncProgressModalLabel">Sync in Progress</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="text-center mb-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2" id="syncStatusText">Initializing sync...</p>
          </div>
          
          <div class="progress mb-3">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" id="syncProgressBar" style="width: 0%"></div>
          </div>
          
          <div class="alert alert-info" id="syncDetailsContainer">
            <p id="syncDetails">Preparing to sync data...</p>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" id="cancelSyncBtn">Cancel</button>
          <button type="button" class="btn btn-primary" id="viewResultsBtn" style="display: none;">View Results</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Wait for DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Add event listeners to sync WBS buttons
      document.querySelectorAll('.sync-wbs-btn').forEach(button => {
        button.addEventListener('click', openSyncWBSModal);
      });
      
      // Sync resources button event listener
      document.getElementById('syncResourcesBtn').addEventListener('click', syncResourceAssignments);
      
      // Start sync WBS button event listener
      document.getElementById('startSyncWBSBtn').addEventListener('click', startSyncWBS);
      
      // Cancel sync button event listener
      document.getElementById('cancelSyncBtn').addEventListener('click', () => {
        const modal = bootstrap.Modal.getInstance(document.getElementById('syncProgressModal'));
        modal.hide();
      });
      
      // View results button event listener
      document.getElementById('viewResultsBtn').addEventListener('click', () => {
        window.location.href = '/integration/status';
      });
    });

    // Open sync WBS modal
    function openSyncWBSModal(event) {
      const projectId = event.currentTarget.dataset.projectId;
      const projectName = event.currentTarget.dataset.projectName;
      
      document.getElementById('selectedProjectName').textContent = projectName;
      
      // Store project ID for later use
      document.getElementById('startSyncWBSBtn').dataset.projectId = projectId;
      
      // Show the modal
      const modal = new bootstrap.Modal(document.getElementById('syncWBSModal'));
      modal.show();
    }

    // Start the WBS sync process
    async function startSyncWBS() {
      const projectId = this.dataset.projectId;
      
      // Close WBS modal
      bootstrap.Modal.getInstance(document.getElementById('syncWBSModal')).hide();
      
      // Show progress modal
      const progressModal = new bootstrap.Modal(document.getElementById('syncProgressModal'));
      progressModal.show();
      
      // Reset progress UI
      document.getElementById('syncProgressBar').style.width = '0%';
      document.getElementById('syncStatusText').textContent = 'Syncing WBS to EBS...';
      document.getElementById('syncDetails').textContent = 'Calculating metrics from activities...';
      document.getElementById('viewResultsBtn').style.display = 'none';
      
      try {
        // Perform WBS sync
        const response = await fetch(`/integration/p6-to-ebs/wbs/${projectId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || 'Failed to sync WBS to EBS');
        }
        
        const result = await response.json();
        
        // Update progress
        document.getElementById('syncProgressBar').style.width = '100%';
        document.getElementById('syncStatusText').textContent = 'Sync completed successfully!';
        document.getElementById('syncDetails').textContent = `Successfully synced WBS elements to EBS tasks.`;
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('viewResultsBtn').style.display = 'block';
        document.getElementById('cancelSyncBtn').textContent = 'Close';
      } catch (error) {
        console.error('Sync error:', error);
        document.getElementById('syncStatusText').textContent = 'Sync failed';
        document.getElementById('syncDetails').textContent = `Error: ${error.message}`;
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('syncProgressBar').classList.add('bg-danger');
      }
    }

    // Sync resource assignments
    async function syncResourceAssignments() {
      // Show progress modal
      const progressModal = new bootstrap.Modal(document.getElementById('syncProgressModal'));
      progressModal.show();
      
      // Reset progress UI
      document.getElementById('syncProgressBar').style.width = '0%';
      document.getElementById('syncStatusText').textContent = 'Syncing Resource Assignments...';
      document.getElementById('syncDetails').textContent = 'Getting resource assignments from P6...';
      document.getElementById('viewResultsBtn').style.display = 'none';
      
      try {
        // Perform resource assignments sync
        const response = await fetch('/integration/p6-to-ebs/resources', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || 'Failed to sync resource assignments');
        }
        
        const result = await response.json();
        
        // Update progress
        document.getElementById('syncProgressBar').style.width = '100%';
        document.getElementById('syncStatusText').textContent = 'Sync completed successfully!';
        document.getElementById('syncDetails').textContent = `Successfully synced resource assignments to EBS.`;
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('viewResultsBtn').style.display = 'block';
        document.getElementById('cancelSyncBtn').textContent = 'Close';
      } catch (error) {
        console.error('Sync error:', error);
        document.getElementById('syncStatusText').textContent = 'Sync failed';
        document.getElementById('syncDetails').textContent = `Error: ${error.message}`;
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('syncProgressBar').classList.add('bg-danger');
      }
    }
  </script>
</body>
</html>