<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">P6-EBS Integration</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/integration/ebs/projects">EBS Projects</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/integration/p6/projects">P6 Projects</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/integration/status">Sync Status</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row">
      <div class="col-md-12">
        <h1>EBS Projects</h1>
        <p class="lead">Select an Oracle EBS project to sync with Primavera P6</p>
        
        <div class="card mb-4">
          <div class="card-header bg-primary text-white">
            Project List
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr>
                    <th>Project Number</th>
                    <th>Project Name</th>
                    <th>Status</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="ebsProjectsTable">
                  <% if (projects && projects.length > 0) { %>
                    <% projects.forEach(project => { %>
                      <tr>
                        <td><%= project.projectNumber %></td>
                        <td><%= project.projectName %></td>
                        <td>
                          <span class="badge <%= 
                            project.projectStatus === 'APPROVED' ? 'bg-success' : 
                            (project.projectStatus === 'PENDING' ? 'bg-warning text-dark' : 'bg-secondary') 
                          %>">
                            <%= project.projectStatus %>
                          </span>
                        </td>
                        <td><%= project.plannedStart ? new Date(project.plannedStart).toLocaleDateString() : 'N/A' %></td>
                        <td><%= project.plannedFinish ? new Date(project.plannedFinish).toLocaleDateString() : 'N/A' %></td>
                        <td>
                          <button class="btn btn-primary btn-sm sync-btn" 
                                  data-project-id="<%= project.projectNumber %>" 
                                  data-project-name="<%= project.projectName %>">
                            Sync to P6
                          </button>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="6" class="text-center">
                        <div class="alert alert-info">
                          No projects found. Please check your connection or API configuration.
                        </div>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Sync Options Modal -->
  <div class="modal fade" id="syncOptionsModal" tabindex="-1" aria-labelledby="syncOptionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="syncOptionsModalLabel">Sync Options</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Project: <strong id="selectedProjectName"></strong></p>
          <p>Select the data you want to sync from EBS to P6:</p>
          
          <div class="form-check mb-2">
            <input class="form-check-input" type="checkbox" id="syncProjectCheck" checked>
            <label class="form-check-label" for="syncProjectCheck">
              Project Information
            </label>
            <small class="text-muted d-block">
              Project Name, Start/End Dates, Status, Project Manager
            </small>
          </div>
          
          <div class="form-check">
            <input class="form-check-input" type="checkbox" id="syncTasksCheck" checked>
            <label class="form-check-label" for="syncTasksCheck">
              Tasks to WBS
            </label>
            <small class="text-muted d-block">
              Task Names, Status, Hierarchy Structure
            </small>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="startSyncBtn">Start Sync</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Sync Progress Modal -->
  <div class="modal fade" id="syncProgressModal" tabindex="-1" aria-labelledby="syncProgressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="syncProgressModalLabel">Sync in Progress</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="text-center mb-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2" id="syncStatusText">Initializing sync...</p>
          </div>
          
          <div class="progress mb-3">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" id="syncProgressBar" style="width: 0%"></div>
          </div>
          
          <div class="alert alert-info" id="syncDetailsContainer">
            <p id="syncDetails">Preparing to sync data from EBS to P6...</p>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" id="cancelSyncBtn">Cancel</button>
          <button type="button" class="btn btn-primary" id="viewResultsBtn" style="display: none;">View Results</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Wait for DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Add event listeners to sync buttons
      document.querySelectorAll('.sync-btn').forEach(button => {
        button.addEventListener('click', openSyncOptionsModal);
      });
      
      // Start sync button event listener
      document.getElementById('startSyncBtn').addEventListener('click', startSync);
      
      // Cancel sync button event listener
      document.getElementById('cancelSyncBtn').addEventListener('click', () => {
        const modal = bootstrap.Modal.getInstance(document.getElementById('syncProgressModal'));
        modal.hide();
      });
      
      // View results button event listener
      document.getElementById('viewResultsBtn').addEventListener('click', () => {
        window.location.href = '/integration/status';
      });
    });

    // Open sync options modal
    function openSyncOptionsModal(event) {
      const projectId = event.currentTarget.dataset.projectId;
      const projectName = event.currentTarget.dataset.projectName;
      
      document.getElementById('selectedProjectName').textContent = projectName;
      
      // Store project ID for later use
      document.getElementById('startSyncBtn').dataset.projectId = projectId;
      
      // Show the modal
      const modal = new bootstrap.Modal(document.getElementById('syncOptionsModal'));
      modal.show();
    }

    // Start the sync process
    async function startSync() {
      const projectId = this.dataset.projectId;
      const syncProject = document.getElementById('syncProjectCheck').checked;
      const syncTasks = document.getElementById('syncTasksCheck').checked;
      
      // Close options modal
      bootstrap.Modal.getInstance(document.getElementById('syncOptionsModal')).hide();
      
      // Show progress modal
      const progressModal = new bootstrap.Modal(document.getElementById('syncProgressModal'));
      progressModal.show();
      
      // Reset progress UI
      document.getElementById('syncProgressBar').style.width = '0%';
      document.getElementById('syncStatusText').textContent = 'Initializing sync...';
      document.getElementById('syncDetails').textContent = 'Preparing to sync data from EBS to P6...';
      document.getElementById('viewResultsBtn').style.display = 'none';
      
      try {
        // Perform sync operations based on user selections
        if (syncProject) {
          await performSync('project', projectId, 50);
        }
        
        if (syncTasks) {
          await performSync('tasks', projectId, 100);
        }
        
        // Show success message
        document.getElementById('syncStatusText').textContent = 'Sync completed successfully!';
        document.getElementById('syncDetails').textContent = 'All selected data has been synchronized from EBS to P6.';
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('viewResultsBtn').style.display = 'block';
        document.getElementById('cancelSyncBtn').textContent = 'Close';
      } catch (error) {
        console.error('Sync error:', error);
        document.getElementById('syncStatusText').textContent = 'Sync failed';
        document.getElementById('syncDetails').textContent = `Error: ${error.message}`;
        document.getElementById('syncProgressBar').classList.remove('progress-bar-animated');
        document.getElementById('syncProgressBar').classList.add('bg-danger');
      }
    }

    // Perform sync operation and update progress
    async function performSync(type, projectId, progressTarget) {
      document.getElementById('syncStatusText').textContent = `Syncing ${type}...`;
      document.getElementById('syncDetails').textContent = `Sending ${type} data from EBS to P6...`;
      
      // Make API call to perform sync
      const response = await fetch(`/integration/ebs-to-p6/${type}/${projectId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || `Failed to sync ${type}`);
      }
      
      const result = await response.json();
      
      // Update progress
      document.getElementById('syncProgressBar').style.width = `${progressTarget}%`;
      document.getElementById('syncDetails').textContent = `Successfully synced ${type} data.`;
      
      return result;
    }
  </script>
</body>
</html>